#include <iostream>
#include <sstream>
#include <string>
using namespace std;

class Number {
 protected:
  int num;

 public:
  bool isPalindrome() {
    if (num < 0) num *= -1;
    string str = to_string(num);
    // store the reverse of the string str
    string rev = str;
    // reverse the string rev
    reverse(rev.begin(), rev.end());
    if (str == rev)
      return true;
    else
      return false;
  }
  void assignNum(int givenNum) { num = givenNum; }
};

class Sum : public Number {
 private:
  int sum;

 public:
  int calculateSum() {
    string str = to_string(num);
    sum = 0;
    for (unsigned i = 0; i < str.length(); i++) {
      sum += str[i] - '0';
    }
    return sum;
  }
};

int main() {
  Number number;
  Sum summa;
  unsigned i = 0, len, count = 0, sum, min_sum = 0;
  int *arr = (int *)malloc(sizeof(int)), value;
  string line;
  getline(cin, line);
  istringstream input_stream(line);
  while (input_stream >> value) {
    if (value > min_sum) min_sum = value;
    arr = (int *)realloc(arr, (i + 1) * sizeof(int));
    arr[i] = value;
    i++;
  }
  len = i;
  for (i = 0; i < len; i++) {
    number.assignNum(arr[i]);
    if (number.isPalindrome()) {
      count++;
      summa.assignNum(arr[i]);
      sum = summa.calculateSum();
      if (sum < min_sum) {
        min_sum = sum;
      }
    }
  }
  if (count > 0)
    cout << count << " " << min_sum;
  else
    cout << 0 << " " << 0;
  return 0;
}