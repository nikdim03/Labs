#include <stdio.h>

void bubbleSort(int a[100][2], unsigned int N)
{
	unsigned int i, j;
	for (i = 0; i < N - 1; i++)
		for (j = 0; j < N - i - 1; j++)// last i elements are already in place
			if (a[j][0] > a[j + 1][0])
			{
				a[j][0] += a[j + 1][0];
				a[j + 1][0] = a[j][0] - a[j + 1][0];
				a[j][0] -= a[j + 1][0];

				a[j][1] += a[j + 1][1];
				a[j + 1][1] = a[j][1] - a[j + 1][1];
				a[j][1] -= a[j + 1][1];
			}
}

int main()
{
	unsigned int i, j, N, M;
	int a[100][100], b[100][2];

	scanf_s("%u%u", &N, &M);

// input a[][]
	for (i = 0; i < N; i++)
		for (j = 0; j < M; j++)
			scanf_s("%d", &a[i][j]);

	printf("\n");

// fill in b[][]
	for (i = 0; i < N; i++)
	{
		b[i][0] = a[i][0];
		b[i][1] = i;
	}

// sort b[][]
	bubbleSort(b, N);

// output
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
			printf("%d ", a[b[i][1]][j]);
		printf("\n");
	}

	return 0;
}